{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Movie_review.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "Cw8Wgl9B4XuO"
      },
      "source": [
        "import nltk\n",
        "nltk.download('stopwords') \n",
        "nltk.download('wordnet')\n",
        "nltk.download('movie_reviews')\n",
        "nltk.download('punkt') "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 222
        },
        "id": "_mMZNevh4eJ9",
        "outputId": "7ac4d555-6e93-4a52-c891-69c801e0ed6b"
      },
      "source": [
        "import pandas as pd\n",
        "from nltk.corpus import movie_reviews, stopwords\n",
        "reviews = []\n",
        "for fileid in movie_reviews.fileids():\n",
        "    tag, filename = fileid.split('/')\n",
        "    reviews.append((tag, movie_reviews.raw(fileid)))\n",
        "sample = pd.DataFrame(reviews, columns=['target', 'document'])\n",
        "print(f'Dimensions: {sample.shape}')\n",
        "sample.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dimensions: (2000, 2)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>target</th>\n",
              "      <th>document</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>neg</td>\n",
              "      <td>plot : two teen couples go to a church party ,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>neg</td>\n",
              "      <td>the happy bastard's quick movie review \\ndamn ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>neg</td>\n",
              "      <td>it is movies like these that make a jaded movi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>neg</td>\n",
              "      <td>\" quest for camelot \" is warner bros . ' firs...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>neg</td>\n",
              "      <td>synopsis : a mentally unstable man undergoing ...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  target                                           document\n",
              "0    neg  plot : two teen couples go to a church party ,...\n",
              "1    neg  the happy bastard's quick movie review \\ndamn ...\n",
              "2    neg  it is movies like these that make a jaded movi...\n",
              "3    neg   \" quest for camelot \" is warner bros . ' firs...\n",
              "4    neg  synopsis : a mentally unstable man undergoing ..."
            ]
          },
          "metadata": {},
          "execution_count": 113
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "hQEfIDuT4v-M",
        "outputId": "0126219e-2ec0-4bf3-eeca-06ed55692014"
      },
      "source": [
        "sample.tail()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>target</th>\n",
              "      <th>document</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1995</th>\n",
              "      <td>pos</td>\n",
              "      <td>wow ! what a movie . \\nit's everything a movie...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1996</th>\n",
              "      <td>pos</td>\n",
              "      <td>richard gere can be a commanding actor , but h...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1997</th>\n",
              "      <td>pos</td>\n",
              "      <td>glory--starring matthew broderick , denzel was...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1998</th>\n",
              "      <td>pos</td>\n",
              "      <td>steven spielberg's second epic film on world w...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1999</th>\n",
              "      <td>pos</td>\n",
              "      <td>truman ( \" true-man \" ) burbank is the perfect...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     target                                           document\n",
              "1995    pos  wow ! what a movie . \\nit's everything a movie...\n",
              "1996    pos  richard gere can be a commanding actor , but h...\n",
              "1997    pos  glory--starring matthew broderick , denzel was...\n",
              "1998    pos  steven spielberg's second epic film on world w...\n",
              "1999    pos  truman ( \" true-man \" ) burbank is the perfect..."
            ]
          },
          "metadata": {},
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1RuJaShn4958",
        "outputId": "b5df502e-f2a0-4d2c-dc20-bdbb3051714e"
      },
      "source": [
        "sample['target'].value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "neg    1000\n",
              "pos    1000\n",
              "Name: target, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8YZJU2zUrgGR"
      },
      "source": [
        "# ข้อ 1.\n",
        "จงเขียนโปรแกรมเพื่อทำการตัดคำ ด้วย word_tokenize โดยสร้างเป็น column ใหม่ชื่อ word_token "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QffrQKVjrp7P"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GaMkl3Oprqr3"
      },
      "source": [
        "# ข้อ 2\n",
        "จงเขียนโปรแกรมเพื่อทำ stemming จากคำที่ได้จากคำที่ได้จาก column word_token โดยสร้างเป็น column ใหม่ชื่อ stemmed "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AYBsmNYdryEf"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pRicqnSuryVI"
      },
      "source": [
        "# ข้อ 3\n",
        "จงเขียนโปรแกรมเพื่อตัด stopword จากคำที่ได้จาก column stemmed โดยสร้างเป็น column ใหม่ชื่อ stopword "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NGixDn_3r2Co"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}